# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /errors:
        get:
            tags:
                - ErrorService
            description: 获取所有错误码列表
            operationId: ErrorService_ListErrorCodes
            parameters:
                - name: errorType
                  in: query
                  schema:
                    type: string
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errors.v1.ListErrorCodesReply'
    /errors/custom:
        post:
            tags:
                - ErrorService
            description: 创建自定义错误
            operationId: ErrorService_CreateCustomError
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/errors.v1.CreateCustomErrorRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errors.v1.CreateCustomErrorReply'
    /errors/{errorCode}:
        get:
            tags:
                - ErrorService
            description: 获取错误信息
            operationId: ErrorService_GetErrorInfo
            parameters:
                - name: errorCode
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
                - name: errorType
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errors.v1.GetErrorInfoReply'
    /student:
        post:
            tags:
                - Student
            operationId: Student_CreateStudent
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/student.v1.CreateStudentRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/student.v1.CreateStudentReply'
    /student/{id}:
        get:
            tags:
                - Student
            description: Sends a greeting
            operationId: Student_GetStudent
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/student.v1.GetStudentReply'
        put:
            tags:
                - Student
            operationId: Student_UpdateStudent
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/student.v1.UpdateStudentRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/student.v1.UpdateStudentReply'
        delete:
            tags:
                - Student
            operationId: Student_DeleteStudent
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/student.v1.DeleteStudentReply'
    /students:
        get:
            tags:
                - Student
            operationId: Student_ListStudents
            parameters:
                - name: pageSize
                  in: query
                  schema:
                    type: string
                - name: page
                  in: query
                  schema:
                    type: string
                - name: name
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/student.v1.ListStudentsReply'
    /user:
        post:
            tags:
                - User
            description: 创建用户
            operationId: User_CreateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user.v1.CreateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.CreateUserReply'
    /user/login:
        post:
            tags:
                - User
            description: 用户登录
            operationId: User_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user.v1.LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.LoginReply'
    /user/{id}:
        get:
            tags:
                - User
            description: 获取用户信息
            operationId: User_GetUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.GetUserReply'
        put:
            tags:
                - User
            description: 更新用户
            operationId: User_UpdateUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user.v1.UpdateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.UpdateUserReply'
        delete:
            tags:
                - User
            description: 删除用户
            operationId: User_DeleteUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.DeleteUserReply'
    /users:
        get:
            tags:
                - User
            description: 获取用户列表
            operationId: User_ListUsers
            parameters:
                - name: page
                  in: query
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  schema:
                    type: string
                - name: username
                  in: query
                  schema:
                    type: string
                - name: email
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.ListUsersReply'
components:
    schemas:
        errors.v1.CreateCustomErrorReply:
            type: object
            properties:
                message:
                    type: string
                errorInfo:
                    $ref: '#/components/schemas/errors.v1.ErrorInfo'
            description: 创建自定义错误响应
        errors.v1.CreateCustomErrorRequest:
            type: object
            properties:
                errorCode:
                    type: integer
                    format: int32
                errorType:
                    type: string
                errorMessage:
                    type: string
                errorDescription:
                    type: string
                solution:
                    type: string
            description: 创建自定义错误请求
        errors.v1.ErrorInfo:
            type: object
            properties:
                errorCode:
                    type: integer
                    format: int32
                errorType:
                    type: string
                errorMessage:
                    type: string
                errorDescription:
                    type: string
                solution:
                    type: string
                createdAt:
                    type: string
                updatedAt:
                    type: string
            description: 错误信息
        errors.v1.GetErrorInfoReply:
            type: object
            properties:
                errorCode:
                    type: integer
                    format: int32
                errorType:
                    type: string
                errorMessage:
                    type: string
                errorDescription:
                    type: string
                solution:
                    type: string
                createdAt:
                    type: string
                updatedAt:
                    type: string
            description: 获取错误信息响应
        errors.v1.ListErrorCodesReply:
            type: object
            properties:
                errors:
                    type: array
                    items:
                        $ref: '#/components/schemas/errors.v1.ErrorInfo'
                total:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
            description: 获取错误码列表响应
        student.v1.CreateStudentReply:
            type: object
            properties:
                message:
                    type: string
        student.v1.CreateStudentRequest:
            type: object
            properties:
                name:
                    type: string
                age:
                    type: integer
                    format: int32
                status:
                    type: integer
                    format: int32
                info:
                    type: string
        student.v1.DeleteStudentReply:
            type: object
            properties:
                message:
                    type: string
        student.v1.GetStudentReply:
            type: object
            properties:
                name:
                    type: string
                status:
                    type: integer
                    format: int32
                id:
                    type: integer
                    format: int32
                info:
                    type: string
                age:
                    type: integer
                    format: int32
                created_at:
                    type: string
                updated_at:
                    type: string
            description: The response message containing the greetings
        student.v1.ListStudentsReply:
            type: object
            properties:
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/student.v1.Students'
                total:
                    type: integer
                    format: int32
        student.v1.Students:
            type: object
            properties:
                name:
                    type: string
                age:
                    type: integer
                    format: int32
                status:
                    type: integer
                    format: int32
                info:
                    type: string
                id:
                    type: integer
                    format: int32
                createdAt:
                    type: string
                updatedAt:
                    type: string
        student.v1.UpdateStudentReply:
            type: object
            properties:
                message:
                    type: string
        student.v1.UpdateStudentRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: int32
                name:
                    type: string
                age:
                    type: integer
                    format: int32
                status:
                    type: integer
                    format: int32
                info:
                    type: string
        user.v1.CreateUserReply:
            type: object
            properties:
                message:
                    type: string
            description: 创建用户响应
        user.v1.CreateUserRequest:
            type: object
            properties:
                username:
                    type: string
                email:
                    type: string
                phone:
                    type: string
                status:
                    type: integer
                    format: int32
                age:
                    type: integer
                    format: int32
                avatar:
                    type: string
                password:
                    type: string
            description: 创建用户请求
        user.v1.DeleteUserReply:
            type: object
            properties:
                message:
                    type: string
            description: 删除用户响应
        user.v1.GetUserReply:
            type: object
            properties:
                id:
                    type: integer
                    format: int32
                username:
                    type: string
                email:
                    type: string
                phone:
                    type: string
                status:
                    type: integer
                    format: int32
                age:
                    type: integer
                    format: int32
                avatar:
                    type: string
                created_at:
                    type: string
                updated_at:
                    type: string
            description: 获取用户响应
        user.v1.ListUsersReply:
            type: object
            properties:
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/user.v1.Users'
                total:
                    type: integer
                    format: int32
            description: 获取用户列表响应
        user.v1.LoginReply:
            type: object
            properties:
                success:
                    type: boolean
                message:
                    type: string
                userInfo:
                    $ref: '#/components/schemas/user.v1.UserInfo'
                token:
                    type: string
            description: 登录响应
        user.v1.LoginRequest:
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
            description: 登录请求
        user.v1.UpdateUserReply:
            type: object
            properties:
                message:
                    type: string
            description: 更新用户响应
        user.v1.UpdateUserRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: int32
                username:
                    type: string
                email:
                    type: string
                phone:
                    type: string
                status:
                    type: integer
                    format: int32
                age:
                    type: integer
                    format: int32
                avatar:
                    type: string
                password:
                    type: string
            description: 更新用户请求
        user.v1.UserInfo:
            type: object
            properties:
                id:
                    type: integer
                    format: int32
                username:
                    type: string
                email:
                    type: string
                phone:
                    type: string
                status:
                    type: integer
                    format: int32
                age:
                    type: integer
                    format: int32
                avatar:
                    type: string
                created_at:
                    type: string
                updated_at:
                    type: string
            description: 用户信息（不包含密码）
        user.v1.Users:
            type: object
            properties:
                id:
                    type: integer
                    format: int32
                username:
                    type: string
                email:
                    type: string
                phone:
                    type: string
                status:
                    type: integer
                    format: int32
                age:
                    type: integer
                    format: int32
                avatar:
                    type: string
                createdAt:
                    type: string
                updatedAt:
                    type: string
            description: 用户列表项
tags:
    - name: ErrorService
      description: 错误处理服务定义
    - name: Student
      description: The greeting service definition.
    - name: User
      description: 用户服务定义
