syntax = "proto3";

package errors.v1;

import "google/api/annotations.proto";

option go_package = "student/api/errors/v1;v1";

// 错误处理服务定义
service ErrorService {
  // 获取错误信息
  rpc GetErrorInfo(GetErrorInfoRequest) returns (GetErrorInfoReply) {
    option (google.api.http) = {
      get: "/errors/{error_code}"
    };
  }
  
  // 获取所有错误码列表
  rpc ListErrorCodes(ListErrorCodesRequest) returns (ListErrorCodesReply) {
    option (google.api.http) = {
      get: "/errors"
    };
  }
  
  // 创建自定义错误
  rpc CreateCustomError(CreateCustomErrorRequest) returns (CreateCustomErrorReply) {
    option (google.api.http) = {
      post: "/errors/custom"
      body: "*"
    };
  }
}

// 获取错误信息请求
message GetErrorInfoRequest {
  int32 error_code = 1;
  string error_type = 2; // 可选：错误类型（如：student, user等）
}

// 获取错误信息响应
message GetErrorInfoReply {
  int32 error_code = 1;
  string error_type = 2;
  string error_message = 3;
  string error_description = 4;
  string solution = 5;
  string created_at = 6;
  string updated_at = 7;
}

// 获取错误码列表请求
message ListErrorCodesRequest {
  string error_type = 1; // 可选：按错误类型过滤
  int32 page = 2;
  int32 page_size = 3;
}

// 获取错误码列表响应
message ListErrorCodesReply {
  repeated ErrorInfo errors = 1;
  int32 total = 2;
  int32 page = 3;
  int32 page_size = 4;
}

// 错误信息
message ErrorInfo {
  int32 error_code = 1;
  string error_type = 2;
  string error_message = 3;
  string error_description = 4;
  string solution = 5;
  string created_at = 6;
  string updated_at = 7;
}

// 创建自定义错误请求
message CreateCustomErrorRequest {
  int32 error_code = 1;
  string error_type = 2;
  string error_message = 3;
  string error_description = 4;
  string solution = 5;
}

// 创建自定义错误响应
message CreateCustomErrorReply {
  string message = 1;
  ErrorInfo error_info = 2;
}

// 通用错误码枚举
enum CommonErrorCode {
  // 成功
  SUCCESS = 0;
  
  // 客户端错误 (4xx)
  BAD_REQUEST = 400;
  UNAUTHORIZED = 401;
  FORBIDDEN = 403;
  NOT_FOUND = 404;
  METHOD_NOT_ALLOWED = 405;
  CONFLICT = 409;
  UNPROCESSABLE_ENTITY = 422;
  TOO_MANY_REQUESTS = 429;
  
  // 服务器错误 (5xx)
  INTERNAL_SERVER_ERROR = 500;
  NOT_IMPLEMENTED = 501;
  BAD_GATEWAY = 502;
  SERVICE_UNAVAILABLE = 503;
  GATEWAY_TIMEOUT = 504;
  
  // 业务错误 (1000+)
  VALIDATION_FAILED = 1000;
  RESOURCE_NOT_FOUND = 1001;
  RESOURCE_ALREADY_EXISTS = 1002;
  INVALID_CREDENTIALS = 1003;
  ACCOUNT_LOCKED = 1004;
  ACCOUNT_DISABLED = 1005;
  INSUFFICIENT_PERMISSIONS = 1006;
  RATE_LIMIT_EXCEEDED = 1007;
  DATABASE_ERROR = 1008;
  EXTERNAL_SERVICE_ERROR = 1009;
}

// 错误类型枚举
enum ErrorType {
  UNKNOWN = 0;
  STUDENT = 1;
  USER = 2;
  AUTH = 3;
  VALIDATION = 4;
  DATABASE = 5;
  EXTERNAL = 6;
  SYSTEM = 7;
}